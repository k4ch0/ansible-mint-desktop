---
# tasks file for 01-setup-user

- name: Role - User Configuration
  shell: echo "Setting up the username... "

- name: Create group= {{ group }} if not exists
  become: yes
  group:
    name: "{{ group }}"
    gid: 1500
    state: present
  tags: 
    - system_user

- name: Create User= {{ user }} if not exists
  become: yes
  user:
    name: "{{ user }}"
    password: "{{ password }}"
    uid: 1500
    group: "{{ group }}"
    groups: "{{ item }}"
    append: yes
    shell: "{{ shell }}"
    comment: "{{ user_comment }}"
    createhome: yes
    state: present
  with_items:
    - adm
    - sudo
    - dip
    - plugdev
    - lpadmin
    - sambashare
    - cdrom
    - docker
  tags:
    - system_user_nw

- name: Create hidden folders
  become: yes
  file:
    path: /home/{{ user }}/{{ item }}
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
  with_items:
    - .fonts
    - .icons
    - .tmp
    - .config/powerline
  tags: 
    - system_user

- name: Create workspace folders
  become: yes
  file:
    path: /home/{{ user }}/workspace/{{ item }}
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
  with_items:
    - backups
    - bin
    - books
    - go
    - projects
    - repos
    - tmp
    - training
    - sandbox
    - vault
    - vault/gitcrypt
    - vault/ssh
    - vms
    - work
  tags:
    - system_user

- name: Get temporal directories older than 5 days
  find:
    paths: "{{ tmp_dir }}"
    age: 5d
    age_stamp: ctime
    recurse: true
  register: files_to_delete

- name: debug
  debug:
    var: files_to_delete.files

- name: Delete files older than 5 days using var files_to_delete
  become: true
  file:
    path: "{{ item.path }}"
    state: absent
  with_items:
    - "{{ files_to_delete.files }}"


- name: Create temporal directories to download everything
  file:
    name: "{{ tmp_dir }}/{{ item }}"
    state: directory
    recurse: yes
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 0777
  with_items:
    - packages
    - fonts
    - icons
  tags:
    - system_user

- name: Change root password
  become: true
  user:
    name: root
    password: "{{ root_password }}"
  tags:
    - system_user

    
- name: Allow {{ user }} user to have passwordless sudo
  become: true
  lineinfile:
    dest: /etc/sudoers
    state: present
    line: '{{ user }} ALL=(ALL) NOPASSWD:ALL'
    validate: visudo -cf %s
  tags:
    - system_user



